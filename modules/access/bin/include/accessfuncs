generate_access_map()
{
local CLD_USER CLD_INSTANCE SUDO_USER ACCESS_MAP_TASK_ID
export ACCESS_MAP_TASK_ID=$(passwordgen 7)

if ! [ "${ALL_CLD_USERS}" ]; then
export ALL_CLD_USERS="$(grep -v "^#\|^$" /var/cld/creds/passwd | cut -d : -f 1)"
fi

export ALL_CLD_INSTANCES=$(/var/cld/bin/cld -a -l -g="$CLD_GROUP")

mkdir -p /var/cld/tmp/access_instances_${ACCESS_MAP_TASK_ID}/{users,instances}
export CLD_FILTER_DIR="/var/cld/tmp/access_instances_${ACCESS_MAP_TASK_ID}"

for CLD_USER in ${ALL_CLD_USERS}
do
sudo -u ${CLD_USER} sudo /var/cld/bin/cld -l > ${CLD_FILTER_DIR}/users/${CLD_USER} 2>/dev/null
done

for CLD_INSTANCE in ${ALL_CLD_INSTANCES}
do
grep -lr "^${CLD_INSTANCE}$" ${CLD_FILTER_DIR}/users/  | cut -d / -f 7 | sort -u > ${CLD_FILTER_DIR}/instances/${CLD_INSTANCE}
done

if [ "$1" = "default" ]; then
echo "${CLD_FILTER_DIR}" > /var/cld/tmp/auditor/current_access_map_tmp
unset mv &>/dev/null
mv -f /var/cld/tmp/auditor/current_access_map_tmp /var/cld/tmp/auditor/current_access_map
fi
}

instancelistgen()
{
cat << EOACCESSLIST
cat > /etc/hosts.deny.tmp << 'EOHOSTSBAN'
$(
if [ -s "/var/cld/modules/access/data/instances/$1/banips" ]
then
grep -svh "^$\|^#" /var/cld/modules/access/data/instances/$1/banips | awk -F"_" '{print "sshd: "$1" # ban ip of "$2}'
else
grep -svh "^$\|^#" /var/cld/modules/access/data/banips | awk -F"_" '{print "sshd: "$1" # ban ip of "$2}'
fi
)
EOHOSTSBAN

cat > /etc/hosts.ports.tmp << 'EOHOSTSPORTS'
$(
[ -s "/var/cld/modules/access/data/instances/$1/protected_ports" ] && cat /var/cld/modules/access/data/instances/$1/protected_ports  || cat /var/cld/creds/protected_ports 2>/dev/null
)
EOHOSTSPORTS

cat > /etc/hosts.localnets.tmp << 'EOHOSTSLOCALS'
$(
if [ -s "/var/cld/modules/access/data/instances/$1/local_nets" ]
then
cat /var/cld/modules/access/data/instances/$1/local_nets
else
[ -s /var/cld/creds/local_nets ] && cat /var/cld/creds/local_nets || echo 172.16.0.0/24
fi
)
EOHOSTSLOCALS

cat > /etc/hosts.localnets6.tmp << 'EOHOSTSLOCALS'
$(
if [ -s "/var/cld/modules/access/data/instances/$1/local_nets6" ]
then
cat /var/cld/modules/access/data/instances/$1/local_nets6
else
[ -s /var/cld/creds/local_nets6 ] && cat /var/cld/creds/local_nets6 || echo fdfb:bb7c:5000:553a:0000:0000:0000:0000/120
fi
)
EOHOSTSLOCALS

cat > /etc/hosts.custom_ports.tmp << 'EOHOSTSCUSTOMPORTS'
$(
[ -s "/var/cld/modules/access/data/instances/$1/custom_ports" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/instances/$1/custom_ports  || grep -svh "^$\|^#" /var/cld/creds/custom_ports 2>/dev/null
)
EOHOSTSCUSTOMPORTS

cat > /etc/hosts.custom_rules.tmp << 'EOHOSTSCUSTOMRULES'
$(
[ -s "/var/cld/modules/access/data/instances/$1/custom_rules" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/instances/$1/custom_rules  || grep -svh "^$\|^#" /var/cld/creds/custom_rules 2>/dev/null
)
EOHOSTSCUSTOMRULES

cat > /etc/hosts.custom_ports6.tmp << 'EOHOSTSCUSTOMPORTS6'
$(
[ -s "/var/cld/modules/access/data/instances/$1/custom_ports6" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/instances/$1/custom_ports6  || grep -svh "^$\|^#" /var/cld/creds/custom_ports6 2>/dev/null
)
EOHOSTSCUSTOMPORTS6

cat > /etc/hosts.custom_rules6.tmp << 'EOHOSTSCUSTOMRULES6'
$(
[ -s "/var/cld/modules/access/data/instances/$1/custom_rules6" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/instances/$1/custom_rules6  || grep -svh "^$\|^#" /var/cld/creds/custom_rules6 2>/dev/null
)
EOHOSTSCUSTOMRULES6

unalias mv &>/dev/null
mv /etc/hosts.allow.tmp /etc/hosts.allow
mv /etc/hosts.ports.tmp /etc/hosts.ports
mv /etc/hosts.localnets.tmp /etc/hosts.localnets
mv /etc/hosts.localnets6.tmp /etc/hosts.localnets6
mv /etc/hosts.custom_ports.tmp /etc/hosts.custom_ports
mv /etc/hosts.custom_rules.tmp /etc/hosts.custom_rules
mv /etc/hosts.custom_ports6.tmp /etc/hosts.custom_ports6
mv /etc/hosts.custom_rules6.tmp /etc/hosts.custom_rules6
EOACCESSLIST
}

grouplistgen()
{
cat << EOACCESSLIST
cat > /etc/hosts.deny.tmp << 'EOHOSTSBAN'
$(
if [ -s "/var/cld/modules/access/data/instances/$1/banips" ]
then
grep -svh "^$\|^#" /var/cld/modules/access/data/groups/$1/banips | awk -F"_" '{print "sshd: "$1" # ban ip of "$2}'
else
grep -svh "^$\|^#" /var/cld/modules/access/data/banips | awk -F"_" '{print "sshd: "$1" # ban ip of "$2}'
fi
)
EOHOSTSBAN

cat > /etc/hosts.ports.tmp << 'EOHOSTSPORTS'
$(
[ -s "/var/cld/modules/access/data/groups/$1/protected_ports" ] && cat /var/cld/modules/access/data/groups/$1/protected_ports  || cat /var/cld/creds/protected_ports 2>/dev/null
)
EOHOSTSPORTS

cat > /etc/hosts.localnets.tmp << 'EOHOSTSLOCALS'
$(
if [ -s "/var/cld/modules/access/data/groups/$1/local_nets" ]
then
cat /var/cld/modules/access/data/groups/$1/local_nets
else
[ -s /var/cld/creds/local_nets ] && cat /var/cld/creds/local_nets || echo 172.16.0.0/24
fi
)
EOHOSTSLOCALS

cat > /etc/hosts.localnets6.tmp << 'EOHOSTSLOCALS'
$(
if [ -s "/var/cld/modules/access/data/groups/$1/local_nets6" ]
then
cat /var/cld/modules/access/data/instances/$1/local_nets6
else
[ -s /var/cld/creds/local_nets6 ] && cat /var/cld/creds/local_nets6 || echo fdfb:bb7c:5000:553a:0000:0000:0000:0000/120
fi
)
EOHOSTSLOCALS

cat > /etc/hosts.custom_ports.tmp << 'EOHOSTSCUSTOMPORTS'
$(
[ -s "/var/cld/modules/access/data/groups/$1/custom_ports" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/groups/$1/custom_ports  || grep -svh "^$\|^#" /var/cld/creds/custom_ports 2>/dev/null
)
EOHOSTSCUSTOMPORTS

cat > /etc/hosts.custom_rules.tmp << 'EOHOSTSCUSTOMRULES'
$(
[ -s "/var/cld/modules/access/data/groups/$1/custom_rules" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/groups/$1/custom_rules  || grep -svh "^$\|^#" /var/cld/creds/custom_rules 2>/dev/null
)
EOHOSTSCUSTOMRULES

cat > /etc/hosts.custom_ports6.tmp << 'EOHOSTSCUSTOMPORTS6'
$(
[ -s "/var/cld/modules/access/data/groups/$1/custom_ports6" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/groups/$1/custom_ports6  || grep -svh "^$\|^#" /var/cld/creds/custom_ports6 2>/dev/null
)
EOHOSTSCUSTOMPORTS6

cat > /etc/hosts.custom_rules6.tmp << 'EOHOSTSCUSTOMRULES6'
$(
[ -s "/var/cld/modules/access/data/groups/$1/custom_rules6" ] && grep -svh "^$\|^#" /var/cld/modules/access/data/groups/$1/custom_rules6  || grep -svh "^$\|^#" /var/cld/creds/custom_rules6 2>/dev/null
)
EOHOSTSCUSTOMRULES6

unalias mv &>/dev/null
mv /etc/hosts.allow.tmp /etc/hosts.allow
mv /etc/hosts.ports.tmp /etc/hosts.ports
mv /etc/hosts.localnets.tmp /etc/hosts.localnets
mv /etc/hosts.localnets6.tmp /etc/hosts.localnets6
mv /etc/hosts.custom_ports.tmp /etc/hosts.custom_ports
mv /etc/hosts.custom_rules.tmp /etc/hosts.custom_rules
mv /etc/hosts.custom_ports6.tmp /etc/hosts.custom_ports6
mv /etc/hosts.custom_rules6.tmp /etc/hosts.custom_rules6
EOACCESSLIST
}

fullaccesslist()
{
[ "${CLD_IP}" ] || init-load-constant --constant=CLD_IP --example=1.2.3.4 --default='$(wget -qO- ip.cldcloud.com)'
local i ii ARG1 ARG2 ARG3 CIDR_OUTPUT CIDRV4 CIDRV6 CLD_GROUPS CLD_ALL_GROUPS_ARG
for i in "${@:1}"
do
  case $i in
    -c|-cidr|--cidr) CIDR_OUTPUT=1  ;;
    -g=*|-groups=*|--groups=*) CLD_GROUPS="${i#*=}" ;;
    -a|-all|--all) CLD_ALL_GROUPS_ARG="--all"       ;;
    *)                              ;;
  esac
done

if [ "${CIDR_OUTPUT}" = "1" ]; then
CIDRV4='/32'
CIDRV6='/128'
fi
echo "127.0.0.1" | awk -v cidr="${CIDRV4}" '{print $1cidr" # localhost"}'
echo "$CLD_IP" | egrep -o "${IPV4REGEX}" | awk -v cidr="${CIDRV4}" '{print $1cidr" # CLD ip"}'
grep -vh "^$\|^#" /var/cld/modules/access/data/myips | egrep "${IPV4REGEX}_" | awk -v cidr="${CIDRV4}" -F"_" '{print $1cidr" # private ip of "$3"-"$4}'
grep -vh "^$\|^#" /var/cld/modules/access/data/enabledips | egrep "${IPV4REGEX}_" | awk -v cidr="${CIDRV4}" -F"_" '{print $1cidr" # manual enabled ip of "$2}'
CLOUDS_USER_ALLOWED ${CLD_ALL_GROUPS_ARG} --groups="${CLD_GROUPS}" | egrep "${IPV4REGEX}_" | awk -v cidr="${CIDRV4}" -F"_" '{print $2cidr" # auto enabled ip of "$1}'
echo "::1" | awk -v cidr=${CIDRV6} '{print $1cidr" # localhost"}'
echo "$CLD_IP" | egrep -o "${IPV6REGEX}" | awk -v cidr=${CIDRV6} '{print $1cidr" # CLD ip"}'
grep -vh "^$\|^#" /var/cld/modules/access/data/myips | egrep "${IPV6REGEX}_" | awk -v cidr=${CIDRV6} -F"_" '{print $1cidr" # private ip of "$3"-"$4}'
grep -vh "^$\|^#" /var/cld/modules/access/data/enabledips | egrep "${IPV6REGEX}_" | awk -v cidr=${CIDRV6} -F"_" '{print $1cidr" # manual enabled ip of "$2}'
CLOUDS_USER_ALLOWED ${CLD_ALL_GROUPS_ARG} --groups="${CLD_GROUPS}" | egrep "${IPV6REGEX}_" | awk -v cidr=${CIDRV6} -F"_" '{print $2cidr" # auto enabled ip of "$1}'
}

updateaccesslists()
{
    {
    #Parsing ip addresses
    { grep -v "^$\|^#" /var/cld/access/{users,groups}/*/clouds | cut -d _ -f 2 ; cat /var/cld/modules/access/data/{myips,enabledips} | cut -d _ -f 1 ; } | egrep "([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})|(([a-f0-9:]+:+)+[a-f0-9]+)" | sort -u > /var/cld/api/accesslist 2>/dev/null
    
    #Update nginx lists
    egrep "([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})" /var/cld/api/accesslist | sort -u | awk '{print "allow "$1"/32;"}' > /etc/nginx/accesslist && systemctl reload nginx
    egrep "(([a-f0-9:]+:+)+[a-f0-9]+)" /var/cld/api/accesslist | sort -u | awk '{print "allow "$1"/128;"}' >> /etc/nginx/accesslist && systemctl reload nginx
    #Deploy current accesslist
    ps axfu | grep -v grep | grep -q "cld-accesslistdeploy" || source <(grep -v "^#\|^$" /etc/cron.d/* -h | grep "cld-accesslistdeploy" | cut -d ' ' -f 7-) &>/dev/null

    } &>/dev/null & disown
}

cld_sshkey_deploy()
{
local TMPLT_ID
TMPLT_ID=$(passwordgen 5)
cat << EOSSHDEPLOY${TMPLT_ID}
[ -d ~/.ssh ] || mkdir ~/.ssh &>/dev/null
chmod 700 ~/.ssh &>/dev/null
cat > ~/.ssh/authorized_keys_tmp << 'EOUSERSSH${TMPLT_ID}'
$(
echo "${MAIN_CLD_KEY}" | awk -v date="${SSHKEY_DEPLOY_DATE}" '{print $0" # added by cld_sshkeysdeploy "date" - Main CLD SSH key"}'
for SSHKEYUSER in $(cat ${CLD_FILTER_DIR}/instances/${VM})
do
SSHKEYVAR="sshkeys_$(sed -e 's#\.#__DOT__#g' -e 's#-#__DASH__#g' <<< ${SSHKEYUSER})"
echo "${!SSHKEYVAR}" | egrep -q '^ssh-(rsa|ed25519) AAAA[0-9A-Za-z+/]+[=]{0,3} ?([A-Za-z0-9@._-]+)?' && echo "${!SSHKEYVAR}" | awk -v date="${SSHKEY_DEPLOY_DATE}" -v user="${SSHKEYUSER}" '{print $0" # added by cld_sshkeysdeploy "date" - key of user "user}'
done | sort -u
)
EOUSERSSH${TMPLT_ID}
$([ "${SKIP_MANUAL_ADDED_KEYS}" ] || echo 'grep -v "cld_sshkeysdeploy" ~/.ssh/authorized_keys >> ~/.ssh/authorized_keys_tmp')
chmod 600 ~/.ssh/authorized_keys_tmp
[ -f ~/.ssh/authorized_keys ] && PREV_SSHKEYS_HASH="\$(cat ~/.ssh/authorized_keys | grep -v "^#\|^\$" | cut -d '#' -f 1 | sort -u | md5sum | awk '{print \$1}')" || PREV_SSHKEYS_HASH="NONE"
NEW_SSHKEYS_HASH="\$(cat ~/.ssh/authorized_keys_tmp | grep -v "^#\|^\$" | cut -d '#' -f 1 | sort -u | md5sum | awk '{print \$1}')"
if [ "\${PREV_SSHKEYS_HASH}" != "\${NEW_SSHKEYS_HASH}" ]; then
unalias mv &>/dev/null
grep -q "^${MAIN_CLD_KEY} #" ~/.ssh/authorized_keys_tmp && mv -f ~/.ssh/authorized_keys_tmp ~/.ssh/authorized_keys
fi
EOSSHDEPLOY${TMPLT_ID}
}

IPV4REGEX='((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[0-9]{1,2})(\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[0-9]{1,2})){3})'
IPV4REGEXCIDR="${IPV4REGEX}(\/([0-9]|[1-2][0-9]|3[0-2]))"

IPV6REGEX='s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*'
IPV6REGEXCIDR="${IPV6REGEX}(\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))"